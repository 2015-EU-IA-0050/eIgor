<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>eigor-parent</artifactId>
        <groupId>it.infocert.eigor</groupId>
        <version>1.1.0-SNAPSHOT</version>
        <relativePath>../eigor-parent</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <name>Eigor :: Command Line Interface (${project.artifactId})</name>
    <artifactId>eigor-cli</artifactId>

    <properties>
        <cli.main.class>it.infocert.eigor.cli.Eigor</cli.main.class>
        <cli.main.jar>eigor</cli.main.jar>
    </properties>

    <dependencies>
        <!-- eigor -->
        <dependency>
            <groupId>it.infocert.eigor</groupId>
            <artifactId>eigor-test</artifactId>
        </dependency>
        <dependency>
            <groupId>it.infocert.eigor</groupId>
            <artifactId>eigor-core</artifactId>
        </dependency>
        <dependency>
            <groupId>it.infocert.eigor</groupId>
            <artifactId>converter-csvcen-cen</artifactId>
        </dependency>
        <dependency>
            <groupId>it.infocert.eigor</groupId>
            <artifactId>converter-cen-fattpa</artifactId>
        </dependency>
        <dependency>
            <groupId>it.infocert.eigor</groupId>
            <artifactId>converter-fattpa-cen</artifactId>
        </dependency>
        <dependency>
            <groupId>it.infocert.eigor</groupId>
            <artifactId>converter-ubl-cen</artifactId>
        </dependency>
        <dependency>
            <groupId>it.infocert.eigor</groupId>
            <artifactId>converter-ublcn-cen</artifactId>
        </dependency>
        <dependency>
            <groupId>it.infocert.eigor</groupId>
            <artifactId>converter-cen-ubl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <version>1.5.2.RELEASE</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>it.infocert.eigor</groupId>
            <artifactId>converter-cen-cii</artifactId>
        </dependency>
        <dependency>
            <groupId>it.infocert.eigor</groupId>
            <artifactId>converter-cii-cen</artifactId>
        </dependency>
        <dependency>
            <groupId>net.sf.jopt-simple</groupId>
            <artifactId>jopt-simple</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j-api.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!--
            add integration-test to the sources,
            to be sure the integration test at least always compile.
             -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${build-helper-maven-plugin.version}</version>
                <executions>
                    <!-- Add a new source directory to our build -->
                    <execution>
                        <id>add-integration-test-sources</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/integration-test/java</source>
                            </sources>
                        </configuration>
                    </execution>
                    <!-- Add a new resource directory to our build -->
                    <execution>
                        <id>add-integration-test-resources</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>add-test-resource</goal>
                        </goals>
                        <configuration>
                            <!-- Configures the resource directory of our integration tests -->
                            <resources>
                                <!--
                                    Placeholders that are found from the files located in the configured resource
                                    directories are replaced with the property values found from the profile
                                    specific configuration file.
                                -->
                                <resource>
                                    <filtering>true</filtering>
                                    <directory>src/integration-test/resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>it.infocert.eigor.cli.Eigor</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!--
            Generates the executable jar.
            Not using 'maven-shade-plugin' because I get an error about a missing "resource".
            Feel free to set up 'maven-shade-plugin' if you prefer.
            -->

        </plugins>
    </build>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>release</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- assembles the archive files running the app -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>3.0.0</version>
                        <configuration>
                            <finalName>${cli.main.jar}-${project.version}</finalName>
                            <descriptors>
                                <descriptor>src/assembly/bin.xml</descriptor>
                            </descriptors>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                        <executions>
                            <execution>
                                <id>create-zip</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- ensure some file exists -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-files-exist</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireFilesExist>
                                            <files>
                                                <file>../eigor-test/src/main/resources</file>
                                                <file>../eigor-core/src/main/resources</file>
                                                <file>env/release/eigor.sh</file>
                                                <file>env/release/eigor.bat</file>
                                                <file>../eigor-core/src/main/resources/cardinality.properties</file>
                                                <file>../eigor-core/src/main/resources/rules.properties</file>
                                                <file>env/release/logback.xml</file>
                                            </files>
                                        </requireFilesExist>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>