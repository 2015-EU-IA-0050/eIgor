#set( $row0 = $File[0] )
#set( $rows = $File.sublist(1,$File.size()) )
#set( $clzName = ${row0.BTBGClassName} )
package it.infocert.eigor.model.core.model;

import java.util.ArrayList;
import java.util.List;

import static java.util.Comparator.comparing;

public class ${clzName} extends AbstractBTBG {

    #foreach( $row in $File )
    #if( !$clzName.equals( $row.BTBGClassName ) )
    private List<${row.BTBGClassName}> ${row.BTBGClassName} = new ParentAwareList<>(0, this);
    #end
    #end

    public ${row0.BTBGClassName}() {
    }

    #foreach( $row in $File )
    #if( !$clzName.equals( $row.BTBGClassName ) )
    public List<${row.BTBGClassName}> get${row.BTBGClassName}() {
        return ${row.BTBGClassName};
    }
    #end
    #end

    @Override
    public int order() {
        return ${row0.OrderInCEN};
    }

    @Override
    public void accept(Visitor v) {
        #if( ${row0.BTBGClassName.startsWith("BG0000")} )
        v.startInvoice(this);
        #else
        v.startBTBG(this);
        #end

        List<BTBG> list = new ArrayList<>();
        #foreach( $row in $File )
        #if( !$clzName.equals( $row.BTBGClassName ) )
        list.addAll(this.${row.BTBGClassName});
        #end
        #end
        list.sort(new Comparator<BTBG>() {
            @Override
            public int compare(BTBG o1, BTBG o2) {
                return o1.order() - o2.order();
            }
        });
        for (BTBG btbg : list) {
            btbg.accept(v);
        }

        #if( ${row0.BTBGClassName.startsWith("BG0000")} )
        v.endInvoice(this);
        #else
        v.endBTBG(this);
        #end

    }

    @Override
    public String toString() {
        return "${row0.IdNormalized}";
    }
}
